
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

	set $target '';
        location / {
		client_body_buffer_size 8k;
		client_max_body_size 8k;

		access_by_lua '
			local json = require("cjson")

			local targets = {'127.0.0.1:8080', '127.0.0.1:8081', '127.0.0.1:8082'}
			ngx.var.target = targets[0]

			local method = ngx.var.request_method
			if method == "GET" or method == "HEAD" or method == "DELETE" then
			    return ngx.exit(0)
			end

			ngx.req.read_body()
			local request_body = ngx.req.get_body_data()

			local json_data = json.decode(request_body)
			if not json_data then
			    return ngx.exit(0)
			end

			local value = json_data.apiUrl
			if not value then
			    return ngx.exit(0)
			end

			local digest
			if type(value) == "number" then
			    digest = value
			elseif type(value) == "string" then
			    -- Todo: 只截取字符串的关键部分进行计算
			    digest = ngx.crc32_short(value)
			else
			    return ngx.exit(0)
			end

			local mod = digest % (#targets)
			ngx.var.target = targets[mod]
		';
		proxy_pass http://$target;
        }
    }

    server {
        listen       8080;
        server_name  localhost;

	set $target '';
        location / {
		echo "port 8080: hell world!";
        }
    }

    server {
        listen       8081;
        server_name  localhost;

	set $target '';
        location / {
		echo "port 8081: hell world!";
        }
    }

    server {
        listen       8082;
        server_name  localhost;

	set $target '';
        location / {
		echo "port 8082: hell world!";
        }
    }
}
